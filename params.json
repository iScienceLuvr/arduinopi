{"name":"Arduinopi","tagline":"Arduino Pi repository","body":"# Arduino Pi\r\n=========\r\n\r\nThe Arduino Pi is a single board computer based on Arduino. The Arduino Pi has a six button keyboard known as GKOS, which is an chorded keyboard, and has an LED matrix based display. Right now, the LED matrix is a 5x5 LED matrix that scrolls. It has 4 digital pins for development using the Arduino platform. The scripting language is called Bitlash. I used Bitlash because it was easier to implement in the Arduino sketch than other programming languages.\r\n\r\n## GKOS Keypad\r\nWith the 6 GKOS keys, directly connected to Arduino I/O pins, it is possible to type any text and enter most functions found on the PC keyboard (Alt, Ctrl, Tab...).\r\n\r\n### How to type\r\nGKOS Alphabet\r\n![](http://koti.mbnet.fi/gkos/gkoscom/g-buttons_letters_us2_p.jpg)\r\nThe GKOS Alphabet.\r\n\r\nLetters G, K, O, S and W require two keys, and they also function as modifiers (shifts) changing the characters on other keys. For example, to press A, press the top left button. But to press H, press the top two buttons on the right ( the G key) and the top left button.\r\n\r\nPressing all 6 keys down toggles between numbers and letters. You get backspace by pressing the 3 keys on the left, and space by pressing the 3 keys on the right. The full character set can be found here.\r\n\r\n###GKOS Hardware\r\n\r\n![](http://koti.mbnet.fi/gkos/gkoscom/arduino/arduino_pads_01.png)\r\nGkos keypad wiring\r\n\r\nIn the Arduino Pi project, the analog pins are used.\r\n\r\n## LED Matrix\r\nThe LED matrix is controlled using row-column scanning. \r\n\r\nLED displays are often packaged as matrixes of LEDs arranged in rows of common anodes and columns of common cathodes, or the reverse. Here's a typical example of an 8x8 matrix, and its schematic:\r\n\r\n![](http://arduino.cc/en/uploads/Tutorial/LEDmatrix_img.jpg)\r\n![](http://arduino.cc/en/uploads/Tutorial/LEDmatrix_schem.png)\r\n\r\nThese can be very useful displays. To control a matrix, you connect both its rows and columns to your microcontroller. The columns are connected to the LEDs cathodes (see Figure 1), so a column needs to be high for any of the LEDs in that column to turn on. The rows are connected to the LEDs anodes, so the row needs to be low for an individual LED to turn on. If the row and the column are both high or both low, no voltage flows through the LED and it doesnâ€™t turn on.\r\n\r\nTo control an individual LED, you set its column high and its row low. To control multiple LEDs in a row, you set the rows high, then take the column high, then set the lows row or high as appropriate; a low row will turn the corresponding LED on, and a high row will turn it off.\r\n\r\nI used the code from the below link and leveraged it for a 5x5 matrix:\r\n\r\n[http://blog.duklabs.com/?p=133](http://blog.duklabs.com/?p=133)\r\n\r\n## Bitlash\r\nBitlash is an open source interpreted language shell and embedded programming environment for Arduino. The Bitlash shell runs entirely on the Arduino and supports many of the familiar Arduino functions. Bitlash interprets commands you type on the serial port or send from your favorite PC-side programming environment. I have integrated Bitlash with the GKOS keypad so instead of using a serial port to enter commands, the GKOS keypad is used instead.\r\n\r\n![](https://github.com/billroy/bitlash/wiki/architecture_of_bitlash_for_arduino.jpg)\r\nBitlash Architecture\r\n\r\nBitlash Wiki:\r\n\r\n[https://github.com/billroy/bitlash/wiki/docindex](https://github.com/billroy/bitlash/wiki/docindex)\r\n\r\nBitlash website:\r\n\r\n[https://www.bitlash.net](https://www.bitlash.net)\r\n\r\n#Repository\r\n=========\r\n\r\nThe repository includes the code, schematic, and PCB files. To view the files, go to github.com/iScienceLuvr/arduinopi or press the \"View on Github\" button or download the github repository by pressing the \"TAR\" or \"ZIP\" download buttons. The entire project is under the Apache License. \r\n\r\n#Deployment\r\n=========\r\n\r\nTo use the code posted in the repository, connect six buttons to the analog pins 0-5 and to the ground. Use a row-column scan LED Matrix (the code supports a 5x5 matrix) and connect them to digital pins 0-9. Refer to the schematic in the github repository\r\n\r\n##Schematic\r\n<iframe width=\"725\" height=\"448\" src=\"http://123d.circuits.io/circuits/233178-arduino-pi/embed\" frameborder=\"0\" marginwidth=\"0\" marginheight=\"0\" scrolling=\"no\"></iframe>","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}